{
  "openapi": "3.0.1",
  "info": {
    "title": "FINBOURNE Identity Service API",
    "termsOfService": "https://www.finbourne.com/legal/terms-conditions",
    "contact": {
      "name": "FINBOURNE Technology",
      "url": "https://www.finbourne.com",
      "email": "info@finbourne.com"
    },
    "version": "0.0.1618",
    "x-logo": {
      "url": "https://www.lusid.com/app/assets/logo_white.png",
      "backgroundColor": "#415464"
    },
    "description": "FINBOURNE Technology"
  },
  "servers": [
    {
      "url": "https://fbn-ci.lusid.com/identity"
    }
  ],
  "paths": {
    "/api/applications": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "[EARLY ACCESS] ListApplications: ",
        "operationId": "ListApplications",
        "responses": {
          "200": {
            "description": "List the available applications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OAuthApplication"
                  }
                },
                "example": [
                  {
                    "id": "UniqueApplicationId",
                    "type": "Native",
                    "displayName": "Example Native Application",
                    "secret": "123456789",
                    "clientId": "my-example-native-app",
                    "issuer": "https://exampleiusser.lusid.com"
                  }
                ]
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "[EARLY ACCESS] CreateApplication: ",
        "operationId": "CreateApplication",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApplicationRequest"
              },
              "example": {
                "displayName": "My First Application",
                "clientId": "my-first-application",
                "type": "Native"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApplicationRequest"
              },
              "example": {
                "displayName": "My First Application",
                "clientId": "my-first-application",
                "type": "Native"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApplicationRequest"
              },
              "example": {
                "displayName": "My First Application",
                "clientId": "my-first-application",
                "type": "Native"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApplicationRequest"
              },
              "example": {
                "displayName": "My First Application",
                "clientId": "my-first-application",
                "type": "Native"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthApplication"
                },
                "example": {
                  "id": "UniqueApplicationId",
                  "type": "Native",
                  "displayName": "Example Native Application",
                  "secret": "123456789",
                  "clientId": "my-example-native-app",
                  "issuer": "https://exampleiusser.lusid.com"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/applications/{id}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "[EARLY ACCESS] GetApplication: ",
        "operationId": "GetApplication",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\-_]+$",
              "type": "string"
            }
          },
          {
            "name": "includeSecret",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get the specified application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthApplication"
                },
                "example": {
                  "id": "UniqueApplicationId",
                  "type": "Native",
                  "displayName": "Example Native Application",
                  "secret": "123456789",
                  "clientId": "my-example-native-app",
                  "issuer": "https://exampleiusser.lusid.com"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "delete": {
        "tags": [
          "Applications"
        ],
        "summary": "[EARLY ACCESS] DeleteApplication: ",
        "operationId": "DeleteApplication",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\-_]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/applications/{id}/lifecycle/$newsecret": {
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "[EXPERIMENTAL] RotateApplicationSecrets: ",
        "operationId": "RotateApplicationSecrets",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\-_]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rotate Application Secrets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthApplication"
                },
                "example": {
                  "id": "UniqueApplicationId",
                  "type": "Native",
                  "displayName": "Example Native Application",
                  "secret": "123456789",
                  "clientId": "my-example-native-app",
                  "issuer": "https://exampleiusser.lusid.com"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Experimental"
      }
    },
    "/api/authentication/information": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "GetAuthenticationInformation: Get authentication information",
        "operationId": "GetAuthenticationInformation",
        "responses": {
          "200": {
            "description": "Get authentication information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationInformation"
                },
                "example": {
                  "issuerUrl": "https://myco.lusid.okta.com/12346",
                  "samlIdentityProviderId": "0oa14txx1jAiz7T302p7as"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/authentication/support": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "[EARLY ACCESS] GrantSupportAccess: Grant FINBOURNE the ability to access your account",
        "operationId": "GrantSupportAccess",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SupportAccessRequest"
              },
              "example": {
                "duration": "PT24H",
                "description": "Investigate issues detailed in support ticket 0604"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupportAccessRequest"
              },
              "example": {
                "duration": "PT24H",
                "description": "Investigate issues detailed in support ticket 0604"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SupportAccessRequest"
              },
              "example": {
                "duration": "PT24H",
                "description": "Investigate issues detailed in support ticket 0604"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SupportAccessRequest"
              },
              "example": {
                "duration": "PT24H",
                "description": "Investigate issues detailed in support ticket 0604"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Grant Support Access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupportAccessResponse"
                },
                "example": {
                  "id": "37322a3efbf445fa861d39759ad22dcb",
                  "duration": "PT24H",
                  "description": "Investigate issues detailed in support ticket 0604",
                  "createdAt": "2020-01-06T12:05:00.0000000+00:00",
                  "expiry": "2020-01-07T12:05:00.0000000+00:00",
                  "createdBy": "UserId-54213",
                  "terminated": false
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "delete": {
        "tags": [
          "Authentication"
        ],
        "summary": "[EARLY ACCESS] InvalidateSupportAccess: Invalidate all FINBOURNE support access to your account",
        "operationId": "InvalidateSupportAccess",
        "responses": {
          "200": {
            "description": "Invalidate all currently active support requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupportAccessResponse"
                  }
                },
                "example": [
                  {
                    "id": "37322a3efbf445fa861d39759ad22dcb",
                    "duration": "PT24H",
                    "description": "Investigate issues detailed in support ticket 0604",
                    "createdAt": "2020-01-06T12:05:00.0000000+00:00",
                    "expiry": "2020-01-07T12:05:00.0000000+00:00",
                    "createdBy": "UserId-54213",
                    "terminated": false
                  },
                  {
                    "id": "37322a3efbf445fa861d39759ad22dcb",
                    "duration": "PT24H",
                    "description": "Investigate issues detailed in support ticket 0604",
                    "createdAt": "2020-01-06T12:05:00.0000000+00:00",
                    "expiry": "2020-01-07T12:05:00.0000000+00:00",
                    "createdBy": "UserId-54213",
                    "terminated": true,
                    "terminatedAt": "2020-01-06T16:05:00.0000000+00:00",
                    "terminatedBy": "UserId-54213"
                  }
                ]
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "[EARLY ACCESS] GetSupportAccessHistory: Get support access history",
        "operationId": "GetSupportAccessHistory",
        "responses": {
          "200": {
            "description": "Get support access history",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupportAccessResponse"
                  }
                },
                "example": [
                  {
                    "id": "37322a3efbf445fa861d39759ad22dcb",
                    "duration": "PT24H",
                    "description": "Investigate issues detailed in support ticket 0604",
                    "createdAt": "2020-01-06T12:05:00.0000000+00:00",
                    "expiry": "2020-01-07T12:05:00.0000000+00:00",
                    "createdBy": "UserId-54213",
                    "terminated": false
                  },
                  {
                    "id": "37322a3efbf445fa861d39759ad22dcb",
                    "duration": "PT24H",
                    "description": "Investigate issues detailed in support ticket 0604",
                    "createdAt": "2020-01-06T12:05:00.0000000+00:00",
                    "expiry": "2020-01-07T12:05:00.0000000+00:00",
                    "createdBy": "UserId-54213",
                    "terminated": true,
                    "terminatedAt": "2020-01-06T16:05:00.0000000+00:00",
                    "terminatedBy": "UserId-54213"
                  }
                ]
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/directory": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "[EARLY ACCESS] FindUsersById: ",
        "operationId": "FindUsersById",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListUsersResponse"
                },
                "example": {
                  "href": "https://my-domain.lusid.com/access",
                  "values": {
                    "00ub0oNGTSWTBKOLGLNR": {
                      "id": "00ub0oNGTSWTBKOLGLNR",
                      "login": "dennis.sierra",
                      "email": "Dennis",
                      "firstName": "Sierra",
                      "lastName": "dennis.sierra@my-awesome-company.com",
                      "type": "Personal",
                      "links": [
                        {
                          "relation": "User",
                          "href": "https://my-domain.lusid.com/access/api/users/00ub0oNGTSWTBKOLGLNR?includeRoles=false",
                          "description": "A link to access the full details of this user",
                          "method": "GET"
                        },
                        {
                          "relation": "Activity",
                          "href": "https://my-domain.lusid.com/insights/api/requests?filter=user%20eq%20%2700ub0oNGTSWTBKOLGLNR%27",
                          "description": "A link to the LUSID Insights API to get all logs related to this user",
                          "method": "GET"
                        }
                      ]
                    },
                    "00uijntSwJjSHtDY70g3": {
                      "id": "00uijntSwJjSHtDY70g3",
                      "login": "rudi.kouma",
                      "email": "Rudi",
                      "firstName": "Kouma",
                      "lastName": "rudi.kouma@my-awesome-company.com",
                      "type": "Personal",
                      "links": [
                        {
                          "relation": "User",
                          "href": "https://my-domain.lusid.com/access/api/users/00uijntSwJjSHtDY70g3?includeRoles=false",
                          "description": "A link to access the full details of this user",
                          "method": "GET"
                        },
                        {
                          "relation": "Activity",
                          "href": "https://my-domain.lusid.com/insights/api/requests?filter=user%20eq%20%2700uijntSwJjSHtDY70g3%27",
                          "description": "A link to the LUSID Insights API to get all logs related to this user",
                          "method": "GET"
                        }
                      ]
                    }
                  },
                  "failed": {
                    "00u19uiKQa0xXkbdGLNR": {
                      "id": "00u19uiKQa0xXkbdGLNR",
                      "type": "UserDoesNotExist",
                      "detail": "The specified user cannot be found or has been deleted"
                    }
                  },
                  "links": [
                    {
                      "relation": "RequestLogs",
                      "href": "https://mydomain.lusid.com/app/insights/logs/0ABCDEFGHIJKL:00000001",
                      "description": "A link to the LUSID Insights website showing all logs related to this request",
                      "method": "GET"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/domains": {
      "post": {
        "tags": [
          "Domains"
        ],
        "summary": "CreateDomain: ",
        "operationId": "CreateDomain",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "maxLength": 262144,
              "minLength": 1,
              "pattern": "^[\\s\\S]*$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDomainRequest"
              },
              "example": {
                "domain": "MyCo",
                "companyName": "MyCo USA",
                "owner": {
                  "firstName": "Owner",
                  "lastName": "OfAccount",
                  "emailAddress": "owner.ofaccount@myco.com",
                  "login": "owner.ofaccount@myco.com",
                  "type": "Personal"
                },
                "signedAgreements": [
                  "TermsAndConditions_01012019_Gb"
                ]
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDomainRequest"
              },
              "example": {
                "domain": "MyCo",
                "companyName": "MyCo USA",
                "owner": {
                  "firstName": "Owner",
                  "lastName": "OfAccount",
                  "emailAddress": "owner.ofaccount@myco.com",
                  "login": "owner.ofaccount@myco.com",
                  "type": "Personal"
                },
                "signedAgreements": [
                  "TermsAndConditions_01012019_Gb"
                ]
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDomainRequest"
              },
              "example": {
                "domain": "MyCo",
                "companyName": "MyCo USA",
                "owner": {
                  "firstName": "Owner",
                  "lastName": "OfAccount",
                  "emailAddress": "owner.ofaccount@myco.com",
                  "login": "owner.ofaccount@myco.com",
                  "type": "Personal"
                },
                "signedAgreements": [
                  "TermsAndConditions_01012019_Gb"
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDomainRequest"
              },
              "example": {
                "domain": "MyCo",
                "companyName": "MyCo USA",
                "owner": {
                  "firstName": "Owner",
                  "lastName": "OfAccount",
                  "emailAddress": "owner.ofaccount@myco.com",
                  "login": "owner.ofaccount@myco.com",
                  "type": "Personal"
                },
                "signedAgreements": [
                  "TermsAndConditions_01012019_Gb"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The created domain",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResponse"
                },
                "example": {
                  "id": {
                    "name": "MyCo"
                  },
                  "description": "US subsidiary of MyCo",
                  "companyName": "MyCo USA",
                  "owner": {
                    "value": "DomainOwnerUserId"
                  },
                  "billingContact": {
                    "value": "BillingContactUserId"
                  },
                  "technicalContact": {
                    "value": "TechnicalContactUserId"
                  },
                  "created": "2018-12-08T13:30:00.0000000+00:00"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResponse"
                },
                "example": {
                  "id": {
                    "name": "MyCo"
                  },
                  "description": "US subsidiary of MyCo",
                  "companyName": "MyCo USA",
                  "owner": {
                    "value": "DomainOwnerUserId"
                  },
                  "billingContact": {
                    "value": "BillingContactUserId"
                  },
                  "technicalContact": {
                    "value": "TechnicalContactUserId"
                  },
                  "created": "2018-12-08T13:30:00.0000000+00:00"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResponse"
                },
                "example": {
                  "id": {
                    "name": "MyCo"
                  },
                  "description": "US subsidiary of MyCo",
                  "companyName": "MyCo USA",
                  "owner": {
                    "value": "DomainOwnerUserId"
                  },
                  "billingContact": {
                    "value": "BillingContactUserId"
                  },
                  "technicalContact": {
                    "value": "TechnicalContactUserId"
                  },
                  "created": "2018-12-08T13:30:00.0000000+00:00"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/domains/me": {
      "get": {
        "tags": [
          "Domains"
        ],
        "summary": "GetMyDomain: ",
        "operationId": "GetMyDomain",
        "responses": {
          "200": {
            "description": "The current domain",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResponse"
                },
                "example": {
                  "id": {
                    "name": "MyCo"
                  },
                  "description": "US subsidiary of MyCo",
                  "companyName": "MyCo USA",
                  "owner": {
                    "value": "DomainOwnerUserId"
                  },
                  "billingContact": {
                    "value": "BillingContactUserId"
                  },
                  "technicalContact": {
                    "value": "TechnicalContactUserId"
                  },
                  "created": "2018-12-08T13:30:00.0000000+00:00"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResponse"
                },
                "example": {
                  "id": {
                    "name": "MyCo"
                  },
                  "description": "US subsidiary of MyCo",
                  "companyName": "MyCo USA",
                  "owner": {
                    "value": "DomainOwnerUserId"
                  },
                  "billingContact": {
                    "value": "BillingContactUserId"
                  },
                  "technicalContact": {
                    "value": "TechnicalContactUserId"
                  },
                  "created": "2018-12-08T13:30:00.0000000+00:00"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResponse"
                },
                "example": {
                  "id": {
                    "name": "MyCo"
                  },
                  "description": "US subsidiary of MyCo",
                  "companyName": "MyCo USA",
                  "owner": {
                    "value": "DomainOwnerUserId"
                  },
                  "billingContact": {
                    "value": "BillingContactUserId"
                  },
                  "technicalContact": {
                    "value": "TechnicalContactUserId"
                  },
                  "created": "2018-12-08T13:30:00.0000000+00:00"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/domains/me/agreements": {
      "get": {
        "tags": [
          "Domains"
        ],
        "summary": "ListAgreements: ",
        "operationId": "ListAgreements",
        "responses": {
          "200": {
            "description": "List the signed agreements for the current domain",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/AgreementResponse"
                  }
                },
                "example": {
                  "termsAndConditions-20190101-GBP": {
                    "name": "TermsAndConditions-20190101-GB",
                    "signedBy": "DomainOwnerUserId",
                    "signedAt": "2019-01-05T10:15:00.0000000+00:00"
                  },
                  "termsAndConditions-20190301-GBP": {
                    "name": "TermsAndConditions-20190301-GB",
                    "signedBy": "DomainOwnerUserId",
                    "signedAt": "2019-03-07T13:23:07.0000000+00:00"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/AgreementResponse"
                  }
                },
                "example": {
                  "termsAndConditions-20190101-GBP": {
                    "name": "TermsAndConditions-20190101-GB",
                    "signedBy": "DomainOwnerUserId",
                    "signedAt": "2019-01-05T10:15:00.0000000+00:00"
                  },
                  "termsAndConditions-20190301-GBP": {
                    "name": "TermsAndConditions-20190301-GB",
                    "signedBy": "DomainOwnerUserId",
                    "signedAt": "2019-03-07T13:23:07.0000000+00:00"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/AgreementResponse"
                  }
                },
                "example": {
                  "termsAndConditions-20190101-GBP": {
                    "name": "TermsAndConditions-20190101-GB",
                    "signedBy": "DomainOwnerUserId",
                    "signedAt": "2019-01-05T10:15:00.0000000+00:00"
                  },
                  "termsAndConditions-20190301-GBP": {
                    "name": "TermsAndConditions-20190301-GB",
                    "signedBy": "DomainOwnerUserId",
                    "signedAt": "2019-03-07T13:23:07.0000000+00:00"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/domains/me/agreements/{agreement}": {
      "put": {
        "tags": [
          "Domains"
        ],
        "summary": "SignAgreement: ",
        "operationId": "SignAgreement",
        "parameters": [
          {
            "name": "agreement",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 100,
              "minLength": 0,
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Signs a specified agreement",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgreementResponse"
                },
                "example": {
                  "name": "TermsAndConditions-20190101-GB",
                  "signedBy": "DomainOwnerUserId",
                  "signedAt": "2019-01-05T10:15:00.0000000+00:00"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgreementResponse"
                },
                "example": {
                  "name": "TermsAndConditions-20190101-GB",
                  "signedBy": "DomainOwnerUserId",
                  "signedAt": "2019-01-05T10:15:00.0000000+00:00"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgreementResponse"
                },
                "example": {
                  "name": "TermsAndConditions-20190101-GB",
                  "signedBy": "DomainOwnerUserId",
                  "signedAt": "2019-01-05T10:15:00.0000000+00:00"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      },
      "head": {
        "tags": [
          "Domains"
        ],
        "summary": "GetAgreement: ",
        "operationId": "GetAgreement",
        "parameters": [
          {
            "name": "agreement",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 100,
              "minLength": 0,
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Whether agreement is signed",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Stable"
      }
    },
    "/api/keys": {
      "post": {
        "tags": [
          "Personal Authentication Tokens"
        ],
        "summary": "[EARLY ACCESS] CreateApiKey: ",
        "operationId": "CreateApiKey",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiKey"
              },
              "example": {
                "displayName": "My API Key",
                "deactivationDate": "2022-12-08T13:30:12.0000000+00:00"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiKey"
              },
              "example": {
                "displayName": "My API Key",
                "deactivationDate": "2022-12-08T13:30:12.0000000+00:00"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiKey"
              },
              "example": {
                "displayName": "My API Key",
                "deactivationDate": "2022-12-08T13:30:12.0000000+00:00"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiKey"
              },
              "example": {
                "displayName": "My API Key",
                "deactivationDate": "2022-12-08T13:30:12.0000000+00:00"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The Personal Access Token and associated meta data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedApiKey"
                },
                "example": {
                  "key": "ba5e8bed1cbd92f3cc4a893a48141ff23617b258cb7f1407f3567d1f35d0f0e0",
                  "id": "f45fcf4e7942422bb6c99ff74de30f40",
                  "displayName": "Automated system A's key",
                  "createdDate": "2020-01-01T00:00:00.0000000+00:00",
                  "deactivationDate": "2020-06-01T00:00:00.0000000+00:00"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "get": {
        "tags": [
          "Personal Authentication Tokens"
        ],
        "summary": "[EARLY ACCESS] ListOwnApiKeys: ",
        "operationId": "ListOwnApiKeys",
        "responses": {
          "200": {
            "description": "List of user's existing Personal Access Tokens",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiKey"
                  }
                },
                "example": [
                  {
                    "id": "f45fcf4e7942422bb6c99ff74de30f40",
                    "displayName": "Automated system A's key",
                    "createdDate": "2020-01-01T00:00:00.0000000+00:00",
                    "deactivationDate": "2020-06-01T00:00:00.0000000+00:00"
                  },
                  {
                    "id": "89762a35ce3649b5b92f47168611a534",
                    "displayName": "Automated system B's key",
                    "createdDate": "2020-01-02T00:00:00.0000000+00:00",
                    "deactivationDate": "2020-06-02T00:00:00.0000000+00:00"
                  },
                  {
                    "id": "bd772a807cab49c0bcac565c8dbd7a20",
                    "displayName": "Automated system C's key",
                    "createdDate": "2020-01-03T00:00:00.0000000+00:00",
                    "deactivationDate": "2020-06-03T00:00:00.0000000+00:00"
                  }
                ]
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/keys/{id}": {
      "delete": {
        "tags": [
          "Personal Authentication Tokens"
        ],
        "summary": "[EARLY ACCESS] DeleteApiKey: ",
        "operationId": "DeleteApiKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\-_]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invalidates a Personal Access Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKey"
                },
                "example": {
                  "id": "f45fcf4e7942422bb6c99ff74de30f40",
                  "displayName": "Automated system A's key",
                  "createdDate": "2020-01-01T00:00:00.0000000+00:00",
                  "deactivationDate": "2020-08-01T00:00:00.0000000+00:00"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/me": {
      "get": {
        "tags": [
          "Me"
        ],
        "summary": "[EARLY ACCESS] GetUserInfo: ",
        "operationId": "GetUserInfo",
        "responses": {
          "200": {
            "description": "Get the specified user's info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                },
                "example": {
                  "id": "asybvrs5",
                  "emailAddress": "joe.bloggs@myco.com",
                  "type": "Personal"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/metadata/access/resources": {
      "get": {
        "tags": [
          "Application Metadata"
        ],
        "summary": "[EARLY ACCESS] ListAccessControlledResources: ",
        "operationId": "ListAccessControlledResources",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfAccessControlledResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfAccessControlledResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfAccessControlledResource"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/metadata/eap": {
      "get": {
        "tags": [
          "Application Metadata"
        ],
        "summary": "[EARLY ACCESS] GetRegistrationAvailability: ",
        "operationId": "GetRegistrationAvailability",
        "responses": {
          "200": {
            "description": "Registration availability state",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "[EARLY ACCESS] ListRoles: ",
        "operationId": "ListRoles",
        "responses": {
          "200": {
            "description": "List the available roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                },
                "example": [
                  {
                    "id": "asnvr5ne35",
                    "roleId": {
                      "scope": "LUSID",
                      "code": "FrontOfficeAdministrator"
                    },
                    "source": "LusidUser",
                    "name": "LUSID:FrontOfficeAdministrator",
                    "description": "Front office administration role"
                  }
                ]
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "[EARLY ACCESS] CreateRole: ",
        "operationId": "CreateRole",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleRequest"
              },
              "example": {
                "name": "LUSID:FrontOfficeAdministrator",
                "description": "Front office administration role"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleRequest"
              },
              "example": {
                "name": "LUSID:FrontOfficeAdministrator",
                "description": "Front office administration role"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleRequest"
              },
              "example": {
                "name": "LUSID:FrontOfficeAdministrator",
                "description": "Front office administration role"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleRequest"
              },
              "example": {
                "name": "LUSID:FrontOfficeAdministrator",
                "description": "Front office administration role"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Create a new role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
                  "id": "asnvr5ne35",
                  "roleId": {
                    "scope": "LUSID",
                    "code": "FrontOfficeAdministrator"
                  },
                  "source": "LusidUser",
                  "name": "LUSID:FrontOfficeAdministrator",
                  "description": "Front office administration role"
                }
              }
            }
          },
          "409": {
            "description": "A role with the same Name already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/roles/{id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "[EARLY ACCESS] GetRole: ",
        "operationId": "GetRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\-_]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get the specified role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
                  "id": "asnvr5ne35",
                  "roleId": {
                    "scope": "LUSID",
                    "code": "FrontOfficeAdministrator"
                  },
                  "source": "LusidUser",
                  "name": "LUSID:FrontOfficeAdministrator",
                  "description": "Front office administration role"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "[EARLY ACCESS] DeleteRole: ",
        "operationId": "DeleteRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\-_]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "put": {
        "tags": [
          "Roles"
        ],
        "summary": "[EARLY ACCESS] UpdateRole: ",
        "operationId": "UpdateRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\-_]+$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleRequest"
              },
              "example": {
                "description": "Front office administration role"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleRequest"
              },
              "example": {
                "description": "Front office administration role"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleRequest"
              },
              "example": {
                "description": "Front office administration role"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleRequest"
              },
              "example": {
                "description": "Front office administration role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update a role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
                  "id": "asnvr5ne35",
                  "roleId": {
                    "scope": "LUSID",
                    "code": "FrontOfficeAdministrator"
                  },
                  "source": "LusidUser",
                  "name": "LUSID:FrontOfficeAdministrator",
                  "description": "Front office administration role"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/roles/{id}/users": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "[EARLY ACCESS] ListUsersInRole: ",
        "operationId": "ListUsersInRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\-_]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The users in the role",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                },
                "example": [
                  {
                    "id": "asybvrs5",
                    "emailAddress": "joe.bloggs@myco.com",
                    "login": "joe.bloggs@myco.com",
                    "firstName": "Joe",
                    "lastName": "Bloggs",
                    "roles": [
                      {
                        "id": "customrole1",
                        "roleId": {
                          "scope": "default",
                          "code": "customrole2"
                        },
                        "source": "LusidUser",
                        "name": "Front Office Administrator",
                        "description": "Administration role for Front Office staff"
                      }
                    ],
                    "type": "Personal",
                    "status": "ACTIVE",
                    "external": false
                  }
                ]
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/roles/{id}/users/{userId}": {
      "put": {
        "tags": [
          "Roles"
        ],
        "summary": "[EARLY ACCESS] AddUserToRole: ",
        "operationId": "AddUserToRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\-_]+$",
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\-_]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "[EARLY ACCESS] RemoveUserFromRole: ",
        "operationId": "RemoveUserFromRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\-_]+$",
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\-_]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/tokens": {
      "delete": {
        "tags": [
          "Tokens"
        ],
        "summary": "[EARLY ACCESS] InvalidateToken: ",
        "operationId": "InvalidateToken",
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "[EARLY ACCESS] ListUsers: ",
        "operationId": "ListUsers",
        "parameters": [
          {
            "name": "includeRoles",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "x-nullable": true
          },
          {
            "name": "includeDeactivated",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "List the available users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                },
                "example": [
                  {
                    "id": "asybvrs5",
                    "emailAddress": "joe.bloggs@myco.com",
                    "login": "joe.bloggs@myco.com",
                    "firstName": "Joe",
                    "lastName": "Bloggs",
                    "roles": [
                      {
                        "id": "customrole1",
                        "roleId": {
                          "scope": "default",
                          "code": "customrole2"
                        },
                        "source": "LusidUser",
                        "name": "Front Office Administrator",
                        "description": "Administration role for Front Office staff"
                      }
                    ],
                    "type": "Personal",
                    "status": "ACTIVE",
                    "external": false
                  }
                ]
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "[EARLY ACCESS] CreateUser: ",
        "operationId": "CreateUser",
        "parameters": [
          {
            "name": "waitForReindex",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "x-nullable": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              },
              "example": {
                "firstName": "Joe",
                "lastName": "Bloggs",
                "emailAddress": "joe.bloggs@myco.com",
                "login": "joe.bloggs@myco.com",
                "type": "Personal"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              },
              "example": {
                "firstName": "Joe",
                "lastName": "Bloggs",
                "emailAddress": "joe.bloggs@myco.com",
                "login": "joe.bloggs@myco.com",
                "type": "Personal"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              },
              "example": {
                "firstName": "Joe",
                "lastName": "Bloggs",
                "emailAddress": "joe.bloggs@myco.com",
                "login": "joe.bloggs@myco.com",
                "type": "Personal"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              },
              "example": {
                "firstName": "Joe",
                "lastName": "Bloggs",
                "emailAddress": "joe.bloggs@myco.com",
                "login": "joe.bloggs@myco.com",
                "type": "Personal"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Create a new user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                },
                "example": {
                  "id": "asybvrs5",
                  "emailAddress": "joe.bloggs@myco.com",
                  "login": "joe.bloggs@myco.com",
                  "firstName": "Joe",
                  "lastName": "Bloggs",
                  "roles": [
                    {
                      "id": "customrole1",
                      "roleId": {
                        "scope": "default",
                        "code": "customrole2"
                      },
                      "source": "LusidUser",
                      "name": "Front Office Administrator",
                      "description": "Administration role for Front Office staff"
                    }
                  ],
                  "type": "Personal",
                  "status": "ACTIVE",
                  "external": false
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "[EARLY ACCESS] GetUser: ",
        "operationId": "GetUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\-_]+$",
              "type": "string"
            }
          },
          {
            "name": "includeRoles",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get the specified user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                },
                "example": {
                  "id": "asybvrs5",
                  "emailAddress": "joe.bloggs@myco.com",
                  "login": "joe.bloggs@myco.com",
                  "firstName": "Joe",
                  "lastName": "Bloggs",
                  "roles": [
                    {
                      "id": "customrole1",
                      "roleId": {
                        "scope": "default",
                        "code": "customrole2"
                      },
                      "source": "LusidUser",
                      "name": "Front Office Administrator",
                      "description": "Administration role for Front Office staff"
                    }
                  ],
                  "type": "Personal",
                  "status": "ACTIVE",
                  "external": false
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "[EARLY ACCESS] DeleteUser: ",
        "operationId": "DeleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\-_]+$",
              "type": "string"
            }
          },
          {
            "name": "purge",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "[EARLY ACCESS] UpdateUser: ",
        "operationId": "UpdateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\-_]+$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              },
              "example": {
                "firstName": "Joe",
                "lastName": "Bloggs",
                "emailAddress": "joe.bloggs@myco.com",
                "login": "joe.bloggs@myco.com"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              },
              "example": {
                "firstName": "Joe",
                "lastName": "Bloggs",
                "emailAddress": "joe.bloggs@myco.com",
                "login": "joe.bloggs@myco.com"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              },
              "example": {
                "firstName": "Joe",
                "lastName": "Bloggs",
                "emailAddress": "joe.bloggs@myco.com",
                "login": "joe.bloggs@myco.com"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              },
              "example": {
                "firstName": "Joe",
                "lastName": "Bloggs",
                "emailAddress": "joe.bloggs@myco.com",
                "login": "joe.bloggs@myco.com"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Update a user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                },
                "example": {
                  "id": "asybvrs5",
                  "emailAddress": "joe.bloggs@myco.com",
                  "login": "joe.bloggs@myco.com",
                  "firstName": "Joe",
                  "lastName": "Bloggs",
                  "roles": [
                    {
                      "id": "customrole1",
                      "roleId": {
                        "scope": "default",
                        "code": "customrole2"
                      },
                      "source": "LusidUser",
                      "name": "Front Office Administrator",
                      "description": "Administration role for Front Office staff"
                    }
                  ],
                  "type": "Personal",
                  "status": "ACTIVE",
                  "external": false
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/users/{id}/lifecycle/$activate": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "[BETA] SendActivationEmail: ",
        "operationId": "SendActivationEmail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\-_]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Beta"
      }
    },
    "/api/users/{id}/lifecycle/$expirepassword": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "[BETA] ExpirePassword: ",
        "operationId": "ExpirePassword",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\-_]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reset the user's password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemporaryPassword"
                }
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Beta"
      }
    },
    "/api/users/{id}/lifecycle/$resetfactors": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "[BETA] ResetFactors: ",
        "operationId": "ResetFactors",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\-_]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Beta"
      }
    },
    "/api/users/{id}/lifecycle/$resetpassword": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "[BETA] ResetPassword: ",
        "operationId": "ResetPassword",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\-_]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Beta"
      }
    },
    "/api/users/{id}/lifecycle/$unlock": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "[BETA] UnlockUser: ",
        "operationId": "UnlockUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\-_]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ],
        "x-fbn-apistatus": "Beta"
      }
    }
  },
  "components": {
    "schemas": {
      "AccessControlledAction": {
        "required": [
          "action",
          "description"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "action": {
            "$ref": "#/components/schemas/ActionId"
          },
          "limitedSet": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdSelectorDefinition"
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccessControlledResource": {
        "required": [
          "actions",
          "description"
        ],
        "type": "object",
        "properties": {
          "application": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessControlledAction"
            }
          },
          "identifierParts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentifierPartSchema"
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActionId": {
        "required": [
          "activity",
          "entity",
          "scope"
        ],
        "type": "object",
        "properties": {
          "scope": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string"
          },
          "activity": {
            "maxLength": 25,
            "minLength": 3,
            "type": "string"
          },
          "entity": {
            "maxLength": 25,
            "minLength": 3,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AgreementResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "signedBy": {
            "type": "string",
            "nullable": true
          },
          "signedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ApiKey": {
        "required": [
          "createdDate",
          "displayName",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9\\-_]+$",
            "type": "string"
          },
          "displayName": {
            "maxLength": 512,
            "minLength": 1,
            "pattern": "^[\\s\\S]*$",
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "deactivationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthenticationInformation": {
        "required": [
          "issuerUrl"
        ],
        "type": "object",
        "properties": {
          "issuerUrl": {
            "type": "string"
          },
          "samlIdentityProviderId": {
            "type": "string",
            "nullable": true
          },
          "support": {
            "$ref": "#/components/schemas/SupportAccessExpiry"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateApiKey": {
        "required": [
          "displayName"
        ],
        "type": "object",
        "properties": {
          "displayName": {
            "maxLength": 512,
            "minLength": 1,
            "pattern": "^[\\s\\S]*$",
            "type": "string"
          },
          "deactivationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateApplicationRequest": {
        "required": [
          "clientId",
          "displayName",
          "type"
        ],
        "type": "object",
        "properties": {
          "displayName": {
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[\\s\\S]*$",
            "type": "string"
          },
          "clientId": {
            "maxLength": 50,
            "minLength": 6,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{5,49}",
            "type": "string"
          },
          "type": {
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z]*$",
            "type": "string"
          },
          "redirectUris": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "postLogoutRedirectUris": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatedApiKey": {
        "required": [
          "createdDate",
          "displayName",
          "id",
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "id": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9\\-_]+$",
            "type": "string"
          },
          "displayName": {
            "maxLength": 512,
            "minLength": 1,
            "pattern": "^[\\s\\S]*$",
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "deactivationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateDomainRequest": {
        "required": [
          "companyName",
          "domain",
          "owner"
        ],
        "type": "object",
        "properties": {
          "domain": {
            "maxLength": 25,
            "minLength": 3,
            "pattern": "^[a-zA-Z]([a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type": "string"
          },
          "description": {
            "maxLength": 50,
            "minLength": 5,
            "pattern": "^[\\s\\S]*$",
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[\\s\\S]*$",
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/CreateUserRequest"
          },
          "technicalContact": {
            "$ref": "#/components/schemas/CreateUserRequest"
          },
          "billingContact": {
            "$ref": "#/components/schemas/CreateUserRequest"
          },
          "signedAgreements": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateRoleRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 512,
            "minLength": 1,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_ +]{2,100}$",
            "type": "string"
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "pattern": "^[\\s\\S]*$",
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateUserRequest": {
        "required": [
          "emailAddress",
          "firstName",
          "lastName",
          "login",
          "type"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[\\s\\S]*$",
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[\\s\\S]*$",
            "type": "string"
          },
          "emailAddress": {
            "maxLength": 80,
            "minLength": 5,
            "type": "string"
          },
          "login": {
            "maxLength": 80,
            "minLength": 5,
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleId"
            },
            "nullable": true
          },
          "type": {
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z]*$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CurrentUserResponse": {
        "required": [
          "emailAddress",
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "emailAddress": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DomainId": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DomainResponse": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/DomainId"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "owner": {
            "$ref": "#/components/schemas/UserId"
          },
          "billingContact": {
            "$ref": "#/components/schemas/UserId"
          },
          "technicalContact": {
            "$ref": "#/components/schemas/UserId"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdentifierPartSchema": {
        "required": [
          "description",
          "displayName",
          "index",
          "name",
          "required"
        ],
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdSelectorDefinition": {
        "required": [
          "actions",
          "identifier"
        ],
        "type": "object",
        "properties": {
          "identifier": {
            "minLength": 1,
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "actions": {
            "minLength": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionId"
            }
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Link": {
        "required": [
          "href",
          "method",
          "relation"
        ],
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "href": {
            "type": "string",
            "format": "uri"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "method": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ListUsersResponse": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "values": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/UserSummary"
            },
            "nullable": true
          },
          "failed": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ErrorDetail"
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LusidProblemDetails": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "errorDetails": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LusidValidationProblemDetails": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "errorDetails": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "OAuthApplication": {
        "required": [
          "clientId",
          "displayName",
          "id",
          "issuer",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "displayName": {
            "maxLength": 512,
            "minLength": 1,
            "pattern": "^[\\s\\S]*$",
            "type": "string"
          },
          "secret": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "string"
          },
          "issuer": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ResourceListOfAccessControlledResource": {
        "required": [
          "values"
        ],
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessControlledResource"
            }
          },
          "href": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          },
          "nextPage": {
            "type": "string",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleId": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "scope": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string",
            "nullable": true
          },
          "code": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RoleResponse": {
        "required": [
          "id",
          "name",
          "roleId",
          "source"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "roleId": {
            "$ref": "#/components/schemas/RoleId"
          },
          "source": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SupportAccessExpiry": {
        "required": [
          "expiry"
        ],
        "type": "object",
        "properties": {
          "expiry": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SupportAccessRequest": {
        "required": [
          "duration"
        ],
        "type": "object",
        "properties": {
          "duration": {
            "maxLength": 30,
            "minLength": 2,
            "pattern": "^P(?!$)((\\d+Y)|(\\d+\\.\\d+Y$))?((\\d+M)|(\\d+\\.\\d+M$))?((\\d+W)|(\\d+\\.\\d+W$))?((\\d+D)|(\\d+\\.\\d+D$))?(T(?=\\d)((\\d+H)|(\\d+\\.\\d+H$))?((\\d+M)|(\\d+\\.\\d+M$))?(\\d+(\\.\\d+)?S)?)??$",
            "type": "string"
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "pattern": "^[\\s\\S]*$",
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SupportAccessResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "duration",
          "expiry",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "duration": {
            "maxLength": 50,
            "minLength": 3,
            "type": "string"
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "pattern": "^[\\s\\S]*$",
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "expiry": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "terminated": {
            "type": "boolean"
          },
          "terminatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "terminatedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TemporaryPassword": {
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateRoleRequest": {
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "pattern": "^[\\s\\S]*$",
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateUserRequest": {
        "required": [
          "emailAddress",
          "firstName",
          "lastName",
          "login"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[\\s\\S]*$",
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[\\s\\S]*$",
            "type": "string"
          },
          "emailAddress": {
            "maxLength": 80,
            "minLength": 5,
            "type": "string"
          },
          "login": {
            "maxLength": 80,
            "minLength": 5,
            "pattern": "^[\\s\\S]*$",
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleId"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserId": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UserResponse": {
        "required": [
          "emailAddress",
          "external",
          "firstName",
          "id",
          "lastName",
          "login",
          "status",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "emailAddress": {
            "type": "string"
          },
          "login": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleResponse"
            },
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "external": {
            "type": "boolean"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "login": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "description": "OAuth2 Implicit Grant",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://lusid.okta.com/oauth2/default/v1/authorize",
            "scopes": {}
          }
        }
      }
    }
  },
  "security": [
    {}
  ],
  "tags": [
    {
      "name": "Application Metadata",
      "description": "Endpoints for querying application metadata"
    },
    {
      "name": "Applications",
      "description": "Endpoints for administering Applications"
    },
    {
      "name": "Authentication",
      "description": "Endpoints for getting authentication details for the domain"
    },
    {
      "name": "Domains",
      "description": "Endpoints for administering Domains"
    },
    {
      "name": "Me",
      "description": "Endpoints for getting more information about the current User"
    },
    {
      "name": "Personal Authentication Tokens",
      "description": "Endpoints for administering one's own Personal Access Tokens"
    },
    {
      "name": "Roles",
      "description": "Endpoints for administering Roles"
    },
    {
      "name": "Tokens",
      "description": "Endpoints for administering Users"
    },
    {
      "name": "Users",
      "description": "Endpoints for querying the users directory"
    }
  ],
  "x-tagGroups": {
    "name": "API",
    "tags": [
      "Application Metadata",
      "Applications",
      "Authentication",
      "Domains",
      "Me",
      "Personal Authentication Tokens",
      "Roles",
      "Tokens",
      "Users"
    ]
  }
}
